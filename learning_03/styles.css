h1 {
    text-align: center;
}

.container {
    background-color: rgb(255, 255, 255);
    padding: 10px 0;
}

.marker {
    height: 25px;
    width: 200px;
    /* margin: auto; */
    margin: 10px auto;
}

.red {
    background: linear-gradient(rgb(122, 74, 14), rgb(245, 62, 113), rgb(162, 27, 27));
    /* box-shadow: 5px 5px red; */
    /* box-shadow: -5px -5px; */
    box-shadow: 0 0 20px 0 rgba(83, 14, 14, 0.8);
}

/* positive-positive = right and downwards */
/* negative-negative = left and upwards */
/* blurRadius 3rd optional argument before color */
/* spreadRadius is the 4th optional argument */

.green {
    background: linear-gradient(#55680D, #71F53E, #116C31);
    /* box-shadow: 5px 5px 5px green; */
    box-shadow: 0 0 20px 0 #3B7E20CC;
}

.blue {
    background: linear-gradient(hsl(186, 76%, 16%), hsl(223, 90%, 60%), hsl(240, 56%, 42%));
    /* box-shadow: 0 0 0 5px blue; */
    box-shadow: 0 0 20px 0 hsla(223, 59%, 31%, 0.8);
}

/* .sleeve {
    width: 110px;
    height: 25px;
    background-color: white;
    opacity: 0.5;
} */

.sleeve {
    width: 110px;
    height: 25px;
    background-color: rgba(255, 255, 255, 0.5);
    /* border-left-width: 10px;
    border-left-style: solid;
    border-left-color: black; */
    border-left: 10px double rgba(0, 0, 0, 0.75);
}


.cap {
    width: 60px;
    height: 25px;
}

.cap, .sleeve {
    display: inline-block;
}

/* margin: auto; sets in order m-top, m-right, m-bottom, and m-left all at once - line 9  */

/* when margin has two values, it sets the first to mtop and mbottom, and the second to mleft and mright */


/* margin: 10px auto; this sets 10px top and bottom, and auto on left and right */


/* rgb each number is between 0 and 255, 0 being 0 % of the color red for example(which is black), and 255 being 100%. */

/* rgb is a function that takes three arguments for red green and blue and produces a color */

/* line 7 adding 10px padding to top and bottom, and setting 0 padding to the right and left; */



/* primary colors are colors that when combined create pure white which are red, green, and blue for rgb */

/* secondary colors are what you get when you combine primary colors which are yellow, cyan, and magenta */

/* tertiary colors combine secondary colors with nearby primary colors so red + yellow, red + cyan, red + magenta, green + yellow, green + cyan, green + magenta, blue + yellow, blue + cyan, blue + magenta, chartreuse green (green + yellow), azure (blue + cyan), and rose (red + magenta).  */



/* combine pure red + pure green => yellow */

/* combine pure green + pure blue => cyan */

/* combine pure red + pure blue => magenta */

/* combine red + yellow => orange */

/* combine green + cyan => spring green */

/* combine magenta + blue => violet */

/* chartreuse green (green + yellow), 

azure (blue + cyan),

and rose (red + magenta). */

/* on a color wheel, when two colors are opposite eachother they are called complementary */

/* if two complementary colors are combined they produce gray */

/* if they are placed side by side, they produce strong visual contrast and appear brighter */

/* try not to overuse these color combinations, best to choose one dominant color as background and choose a complementary color to accent it */

/* hex values start with a #, take 6 characters from 0 - 9, and A - F. First pair represents red, second represents green, and third represents blue.    */

/* hexadecimal or base 16, goes from 0-9, and then A-F */


/* 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F */

/* 00 is 0% of that color, FF is 100% of that color. 00FF00 translates to 0% red, 100% green, 0% blue. same as rgb(0, 255, 0) */


/* HSL or Hue, Saturation, and Lightness is another representation of colors */


/* accepts 3 values, 0 - 360 for Hue, 0 - 100 for Saturation as a percent, 0 - 100 for Lightness as a percentage */


/* gradient one color transitions into another, linear gradient property lets you control direction of the transition along a line, and which colors are used */

/* note: linear gradient creates an image element, and is paired with background property which can accept an image as a value */

/* linear gradient arranges colors top to bottom or on a 180 deg line by default, and places colors evenly, however if one wants to alter this even distribution they can use color stops, adding a percentage after the color specifying where the color should start transitioning to the next */

/* opacity of 0 means element will be 0% visible, 1.0 will be 100% visible, 0.5 will be 50% visible or opaque */

/* one can use the alpha channel with the color functions to modify opacity, for example rgba, hsla, etc */


/* default display property for div is block, when two block elements are next to eachother, they stack vertically like blocks. */

/* to position two divs on the same line, set their display properties to inline-block */

/* box shadow property accepts 3 arguments, offsetX, offsetY, color. */

/* offsets accept number values with units like px, positive X value moves shadow right, and negative moves it left,
positive Y value moves shadow down, and negative moves it up */


/* you can also use a spreadradius argument in the box shadow function */

